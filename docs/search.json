[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "gradient_dissent",
    "section": "",
    "text": "Quarto Basics\n\n\n\n\n\n\nnews\n\n\ncode\n\n\n\n\n\n\n\n\n\nFeb 20, 2025\n\n\nJo Mo\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 19, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To Joâ€™s blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 16, 2025\n\n\nTristan Oâ€™Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To Joâ€™s blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesnâ€™t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/new_test_post/hello.html",
    "href": "posts/new_test_post/hello.html",
    "title": "Quarto Basics",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see FigureÂ 1\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import make_moons\n\n# Create figure and axis objects with a single subplot\nplt.figure(figsize=(8, 6))\n\n# Generate the moon-shaped data\nX, y = make_moons(n_samples=200, noise=0.05, random_state=42)\n\n# Create scatter plots with improved styling\nplt.scatter(X[y==0, 0], X[y==0, 1], color='red', label='Class 0', alpha=0.6, edgecolor='darkred')\nplt.scatter(X[y==1, 0], X[y==1, 1], color='blue', label='Class 1', alpha=0.6, edgecolor='darkblue')\n\n# Add labels and title\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.title('Half-moon Classification Dataset')\n\n# Add legend with better positioning\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n\n# Add grid for better readability\nplt.grid(True, linestyle='--', alpha=0.7)\n\n# Adjust layout to prevent label cutoff\nplt.tight_layout()\n\nplt.show()\n\n\n\n\n\n\n\n\nFigureÂ 1: Non-linear classification example using half-moon data"
  },
  {
    "objectID": "posts/new_test_post/hello.html#half-moon-classification-example",
    "href": "posts/new_test_post/hello.html#half-moon-classification-example",
    "title": "Quarto Basics",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see FigureÂ 1\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import make_moons\n\n# Create figure and axis objects with a single subplot\nplt.figure(figsize=(8, 6))\n\n# Generate the moon-shaped data\nX, y = make_moons(n_samples=200, noise=0.05, random_state=42)\n\n# Create scatter plots with improved styling\nplt.scatter(X[y==0, 0], X[y==0, 1], color='red', label='Class 0', alpha=0.6, edgecolor='darkred')\nplt.scatter(X[y==1, 0], X[y==1, 1], color='blue', label='Class 1', alpha=0.6, edgecolor='darkblue')\n\n# Add labels and title\nplt.xlabel('Feature 1')\nplt.ylabel('Feature 2')\nplt.title('Half-moon Classification Dataset')\n\n# Add legend with better positioning\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n\n# Add grid for better readability\nplt.grid(True, linestyle='--', alpha=0.7)\n\n# Adjust layout to prevent label cutoff\nplt.tight_layout()\n\nplt.show()\n\n\n\n\n\n\n\n\nFigureÂ 1: Non-linear classification example using half-moon data"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "ðŸ‘‹ Hey there! Iâ€™m Jonathan. Passionate about artificial intelligence and data science, I love exploring the intersection between academic research and real-world applications. My journey has led me to work in AI R&D in North Americaâ€™s largest financial cooperative (Desjardins), tackling exciting topics like recommendation systems, reinforcement learning, graph neural networks, and self-supervised learning. But beyond algorithms, what truly drives me is sharing knowledge.\nThatâ€™s why I started Gradient Dissentâ€”a blog where I walk through entry-level ideas, break down complex AI concepts, share my thoughts on the field, and maybe, just maybe, challenge conventional wisdom along the way. Why the name? Well, machine learning aficionados are quite familiar with a certain algorithm that methodically fine-tunes models step by stepâ€¦ But me? I like to question, challenge, and sometimes outright disagree with the status quoâ€”hence Gradient Dissent. A little stubbornness never hurt anyone, right? ðŸ˜„\nIâ€™ve had the opportunity to teach programming at the HEC Montreal and develop advanced AI training programs. My goal? To make complex concepts accessible and help students, researchers, and professionals navigate this ever-evolving field. I thrive on bridging the gap between theory and practice, supporting learners of all levels in mastering machine learning.\nSo, whether youâ€™re here out of curiosity, passion, or professional interest, welcome to Gradient Dissent! Expect deep dives, fresh insights, and the occasional rebellious take on AI. ðŸš€"
  }
]